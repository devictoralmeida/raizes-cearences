spring.application.name=teste
spring.profiles.active=dev
spring.datasource.url=${DB_URL}
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=3
spring.datasource.hikari.max-lifetime=1800000
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format.sql=true
spring.jpa.hibernate.ddl-auto=update
# faz com que a sessão JPA seja encerrada antes de voltar para a camada controller.
spring.jpa.open-in-view=false
# Envers
spring.jpa.properties.org.hibernate.envers.revision_field_name=cd_auditoria
spring.jpa.properties.org.hibernate.envers.revision_type_field_name=tp_movimento
spring.jpa.properties.org.hibernate.envers.store_data_at_delete=true
# Firebase
private.key.address=${PRIVATE_KEY_ADDRESS}
firebase.database.url=${FIREBASE_DATABASE_URL}
# Flyway
spring.flyway.url=${DB_URL}
spring.flyway.user=postgres
spring.flyway.password=postgres
spring.flyway.locations=classpath:db/migration
# Configuração de upload de arquivos
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=45MB
# Email Service
spring.mail.host=${EMAIL_HOST:smtp.gmail.com}
spring.mail.port=${EMAIL_PORT:587}
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# Storage
minio.endpoint=${MINIO_ENDPOINT}
minio.bucket.name=${MINIO_BUCKET_NAME}
minio.access-key=${MINIO_ACCESS_KEY}
minio.secret-key=${MINIO_SECRET_KEY}
# Firebase auth
google.login.url=${GOOGLE_LOGIN_URL}
google.senha.url=${GOOGLE_SENHA_URL}
refresh.token.url=${REFRESH_TOKEN_URL}
firebase.api.key=${FIREBASE_API_KEY}